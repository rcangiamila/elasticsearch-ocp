apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  labels:
    name: elasticsearch
  annotations:
    description: Elasticsearch OpenShift template
    openshift.io/display-name: Elasticsearch
    tags: instant-app,elasticsearch
  name: elasticsearch
message: "Deploy Elasticsearch in Openshift Container Platform"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: ${ES_SERVICE_NAME}
  spec:
    ports:
    - name: 9200-tcp
      nodePort: 0
      port: 9200
      protocol: TCP
      targetPort: 9200
    selector:
      name: ${ES_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${ES_SERVICE_NAME}-data
  spec:
    accessModes:
    - ReadWriteMany
    resources:
      requests:
        storage: ${ES_VOLUME_CAPACITY}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${ES_SERVICE_NAME}
    name: ${ES_SERVICE_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: ${ES_SERVICE_NAME}
      appName: ${ES_SERVICE_NAME}
    name: ${ES_SERVICE_NAME}
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: ${ES_SERVICE_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /
      git:
        uri: https://github.com/rcangiamila/elasticsearch-ocp.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    triggers:
    - github:
        secret: tu5UyJNNhAyxXYrcnDTZ
      type: GitHub
    - generic:
        secret: xhUU0WVDG3eA2Yu89zGe
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      creationTimestamp: null
      name: ${ES_SERVICE_NAME}
    name: ${ES_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${ES_SERVICE_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${ES_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: ES_DB_TYPE
            value: "mysql"
          - name: ES_DB_NAME
            value: "${MYSQL_DATABASE}"          
          - name: ES_DB_USER
            value: "${MYSQL_USER}"
          - name: ES_DB_PASSWORD
            value: "${MYSQL_PASSWORD}"
          - name: ES_DB_HOST
            value: "${MYSQL_DATABASE_SERVICE_NAME}"
          - name: ES_ADDONS_LIST
            value: "${ES_ADDONS_LIST}"
          - name: ES_MONGO_HOST
            value: "${MONGODB_DATABASE_SERVICE_NAME}"
          - name: ES_MONGO_DB_NAME
            value: "${MONGODB_DATABASE}"
          - name: ES_MONGO_USERNAME
            value: ${MONGODB_USER}
          - name: ES_MONGO_PASSWORD
            value: ${MONGODB_PASSWORD}            
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 900
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 4
          name: ${ES_SERVICE_NAME}
          ports:
          - containerPort: 9200
            protocol: TCP
          resources:
            limits:
              cpu: ${ES_CPU_LIMIT}
              memory: ${ES_MEMORY_LIMIT}
            requests:
              cpu: 500m
              memory: "1Gi"
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /opt/elasticsearch/data
            name: ${ES_SERVICE_NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${ES_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${ES_SERVICE_NAME}-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${ES_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${ES_SERVICE_NAME}:latest
      type: ImageChange
  status: {}
parameters:
- description: Number of virtual CPUs to allocate for Elasticsearch.
  displayName: Elasticsearch CPU limit
  name: ES_CPU_LIMIT
  required: true
  value: "2"
- description: The maximum amount of memory that the Elasticsearch application is allowed to use (Min is 512Mi)
  displayName: Elasticsearch Memory Limit
  name: ES_MEMORY_LIMIT
  required: true
  value: 2Gi
- description: The name of the Elasticsearch Service exposed for the route.
  displayName: Elasticsearch Service Name
  name: ES_SERVICE_NAME
  required: true
  value: elasticsearch
- description: Elasticsearch Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Elasticsearch volume capacity
  name: ES_VOLUME_CAPACITY
  required: true
  value: 2Gi
- description: Elasticsearch cluster name.
  displayName: Elasticsearch cluster name
  name: ES_CLUSTER_NAME
  required: true
  value: elasticsearch
- description: Elasticsearch minimum number of master-eligible nodes.
  displayName: Elasticsearch number of master nodes
  name: ES_NUMBER_OF_MASTERS
  required: true
  value: "1"
- description: Elasticsearch network bind.
  displayName: Elasticsearch network bind
  name: ES_NETWORK_HOST
  required: true
  value: 0.0.0.0
- description: Elasticsearch publish host.
  displayName: Elasticsearch publish host.
  name: ES_PUBLISH_HOST
- description: Elasticsearch loopback addresses bind.
  displayName: Elasticsearch loopback addresses bind.
  name: ES_UNICAST_HOSTS
  value: "127.0.0.1, [::1]"
